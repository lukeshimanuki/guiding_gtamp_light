apiVersion: batch/v1
kind: Job
metadata:
  name: NAME-greedyl
  labels:
    experiment: NAME-greedyl
spec:
  template:
    metadata:
      annotations:
        "cluster-autoscaler.kubernetes.io/safe-to-evict": "false"
    spec:
      containers:
      - name: NAME-greedyl
        image: lukeshimanuki/guiding_gtamp_light:latest
        imagePullPolicy: Always
        command: ['bash']
        args:
        - '-c'
        - 'mkdir ~/.openrave && mc config host add lis https://ceph.csail.mit.edu ${S3ACCESS} ${S3SECRET} && mc cp -r lis/bkim/ik/* ~/.openrave && cd /guiding_gtamp_light && sed -i "s/url = git@github.com:/url = http:\/\/github.com\//" .git/config && git fetch && git checkout COMMIT && for a in DOMAINS; do for n in NUMOBJ_RANGE; do for i in PIDX_RANGE; do for j in SEEDS; do echo planning for a $a n $n pidx $i seed $j; PYTHONPATH=/guiding_gtamp_light/openrave_wrapper/manipulation:/guiding_gtamp_light/openrave_wrapper:/guiding_gtamp_light:/guiding_gtamp_light/mover_library:/pddlstream timeout $((600*$n))s python2 test_scripts/run_greedy.py -pidx=$i -n_objs_pack=$n -domain=${a}_arm_mover -planner_seed=$j -sampler_seed=$j -timelimit=$((500*$n)) -n_mp_limit=5 -n_iter_limit=2000 -h_option=qlearned_hcount_old_number_in_goal -f; done; done; done; done; mc cp -r test_results lis/guiding-gtamp; echo finished'
        envFrom:
          - secretRef:
              name: OPENSTACKSECRETSREF
        resources:
          limits:
            cpu: 3
            memory: 12Gi
            nvidia.com/gpu: 0
          requests:
            cpu: 3
            memory: 12Gi
            nvidia.com/gpu: 0
      restartPolicy: Never

